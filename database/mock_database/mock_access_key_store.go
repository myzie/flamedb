// Code generated by MockGen. DO NOT EDIT.
// Source: access_keys.go

// Package mock_database is a generated GoMock package.
package mock_database

import (
	gomock "github.com/golang/mock/gomock"
	database "github.com/myzie/flamedb/database"
	reflect "reflect"
)

// MockAccessKeyStore is a mock of AccessKeyStore interface
type MockAccessKeyStore struct {
	ctrl     *gomock.Controller
	recorder *MockAccessKeyStoreMockRecorder
}

// MockAccessKeyStoreMockRecorder is the mock recorder for MockAccessKeyStore
type MockAccessKeyStoreMockRecorder struct {
	mock *MockAccessKeyStore
}

// NewMockAccessKeyStore creates a new mock instance
func NewMockAccessKeyStore(ctrl *gomock.Controller) *MockAccessKeyStore {
	mock := &MockAccessKeyStore{ctrl: ctrl}
	mock.recorder = &MockAccessKeyStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccessKeyStore) EXPECT() *MockAccessKeyStoreMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockAccessKeyStore) Get(id string) (*database.AccessKey, error) {
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*database.AccessKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockAccessKeyStoreMockRecorder) Get(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAccessKeyStore)(nil).Get), id)
}
