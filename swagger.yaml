swagger: "2.0"
info:
  description: "FlameDB HTTP API"
  version: "1.0.0"
  title: "FlameDB HTTP API"
host: "127.0.0.1"
basePath: "/api"
tags: []
schemes:
- http
securityDefinitions:
  flamedb_auth:
    type: apiKey
    in: header
    name: Authorization
  basicAuth:
    type: basic
    description: HTTP basic authentication
paths:
  /records:
    post:
      tags:
      - "records"
      summary: "Create a new record"
      description: ""
      operationId: "createRecord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "Record to be created"
        required: true
        schema:
          $ref: "#/definitions/RecordInput"
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "Successfully created"
          schema:
            $ref: "#/definitions/RecordOutput"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequest"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
      - basicAuth: []
    get:
      tags:
      - "records"
      summary: "List records"
      description: ""
      operationId: "listRecords"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: offset
        in: query
        type: integer
        minimum: 0
      - name: limit
        in: query
        type: integer
        minimum: 0
        maximum: 1000
      - name: parent
        in: query
        type: string
      - name: prefix
        in: query
        type: string
      - name: orderBy
        in: query
        type: string
      - name: orderByDesc
        in: query
        type: boolean
      - name: orderByProperty
        in: query
        type: string
      - name: orderByPropertyDesc
        in: query
        type: boolean
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "Successful query"
          schema:
            $ref: "#/definitions/QueryResult"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
  /records/{recordId}:
    get:
      tags:
      - "records"
      summary: "Find record by ID"
      description: ""
      operationId: "getRecord"
      produces:
      - "application/json"
      parameters:
      - name: recordId
        in: path
        description: "ID of record to return"
        required: true
        type: string
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "The retrieved record"
          schema:
            $ref: "#/definitions/RecordOutput"
        404:
          description: "Record not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
      - basicAuth: []
    put:
      tags:
      - "records"
      summary: "Update an existing record"
      description: ""
      operationId: "updateRecord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: recordId
        in: path
        description: "ID of record to be updated"
        required: true
        type: string
      - name: record
        in: body
        description: "Record to be updated"
        required: true
        schema:
          $ref: "#/definitions/RecordInput"
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/RecordOutput"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequest"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
      - basicAuth: []
    delete:
      tags:
      - "records"
      summary: "Deletes a record"
      description: ""
      operationId: "deleteRecord"
      produces:
      - "application/json"
      parameters:
      - name: recordId
        in: path
        description: "ID of record to be updated"
        required: true
        type: string
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "Record deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequest"
        404:
          description: "Record not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
      - basicAuth: []
  /find:
    get:
      tags:
      - "records"
      summary: "Find a record by path"
      description: ""
      operationId: "findRecord"
      produces:
      - "application/json"
      parameters:
      - name: path
        in: query
        description: "Path of record to find"
        required: true
        type: string
      - name: X-User-ID
        in: header
        description: "Override user ID"
        required: false
        type: string
      responses:
        200:
          description: "The retrieved record"
          schema:
            $ref: "#/definitions/RecordOutput"
        404:
          description: "Record not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
      security:
      - flamedb_auth: []
      - basicAuth: []
definitions:
  RecordInput:
    type: object
    required:
    - path
    - properties
    properties:
      id:
        type: string
      path:
        type: string
      properties:
        type: object
        additionalProperties:
          type: object
  RecordOutput:
    type: "object"
    required:
    - id
    - path
    - parent
    - created_at
    - created_by
    - updated_at
    - updated_by
    - properties
    properties:
      id:
        type: string
      path:
        type: string
      parent:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      properties:
        type: object
        additionalProperties:
          type: object
  QueryResult:
    type: object
    required:
    - records
    properties:
      records:
        type: array
        items:
          $ref: "#/definitions/RecordOutput"
  Principal:
    type: object
    properties:
      user_id:
        type: string
      permissions:
        type: string
      is_service:
        type: boolean
  InternalServerError:
    type: object
    properties:
      message:
        type: string
      error_type:
        type: string
  ValidationError:
    type: object
    properties:
      message:
        type: string
      error_type:
        type: string
  BadRequest:
    type: object
    properties:
      message:
        type: string
      error_type:
        type: string
  NotFoundError:
    type: object
    properties:
      message:
        type: string
      error_type:
        type: string
