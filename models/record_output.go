// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RecordOutput record output
// swagger:model RecordOutput
type RecordOutput struct {

	// created at
	// Required: true
	CreatedAt *string `json:"created_at"`

	// created by
	// Required: true
	CreatedBy *string `json:"created_by"`

	// id
	// Required: true
	ID *string `json:"id"`

	// parent
	// Required: true
	Parent *string `json:"parent"`

	// path
	// Required: true
	Path *string `json:"path"`

	// properties
	// Required: true
	Properties map[string]string `json:"properties"`

	// updated at
	// Required: true
	UpdatedAt *string `json:"updated_at"`

	// updated by
	// Required: true
	UpdatedBy *string `json:"updated_by"`
}

// Validate validates this record output
func (m *RecordOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCreatedBy(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateParent(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePath(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUpdatedBy(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RecordOutput) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validateCreatedBy(formats strfmt.Registry) error {

	if err := validate.Required("created_by", "body", m.CreatedBy); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validateParent(formats strfmt.Registry) error {

	if err := validate.Required("parent", "body", m.Parent); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validatePath(formats strfmt.Registry) error {

	if err := validate.Required("path", "body", m.Path); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validateProperties(formats strfmt.Registry) error {

	return nil
}

func (m *RecordOutput) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", m.UpdatedAt); err != nil {
		return err
	}

	return nil
}

func (m *RecordOutput) validateUpdatedBy(formats strfmt.Registry) error {

	if err := validate.Required("updated_by", "body", m.UpdatedBy); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RecordOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RecordOutput) UnmarshalBinary(b []byte) error {
	var res RecordOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
