// Code generated by go-swagger; DO NOT EDIT.

package records

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/myzie/flamedb/models"
)

// GetRecordOKCode is the HTTP code returned for type GetRecordOK
const GetRecordOKCode int = 200

/*GetRecordOK The retrieved record

swagger:response getRecordOK
*/
type GetRecordOK struct {

	/*
	  In: Body
	*/
	Payload *models.RecordOutput `json:"body,omitempty"`
}

// NewGetRecordOK creates GetRecordOK with default headers values
func NewGetRecordOK() *GetRecordOK {

	return &GetRecordOK{}
}

// WithPayload adds the payload to the get record o k response
func (o *GetRecordOK) WithPayload(payload *models.RecordOutput) *GetRecordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get record o k response
func (o *GetRecordOK) SetPayload(payload *models.RecordOutput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecordNotFoundCode is the HTTP code returned for type GetRecordNotFound
const GetRecordNotFoundCode int = 404

/*GetRecordNotFound Record not found

swagger:response getRecordNotFound
*/
type GetRecordNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundError `json:"body,omitempty"`
}

// NewGetRecordNotFound creates GetRecordNotFound with default headers values
func NewGetRecordNotFound() *GetRecordNotFound {

	return &GetRecordNotFound{}
}

// WithPayload adds the payload to the get record not found response
func (o *GetRecordNotFound) WithPayload(payload *models.NotFoundError) *GetRecordNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get record not found response
func (o *GetRecordNotFound) SetPayload(payload *models.NotFoundError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecordInternalServerErrorCode is the HTTP code returned for type GetRecordInternalServerError
const GetRecordInternalServerErrorCode int = 500

/*GetRecordInternalServerError Internal Server Error

swagger:response getRecordInternalServerError
*/
type GetRecordInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.InternalServerError `json:"body,omitempty"`
}

// NewGetRecordInternalServerError creates GetRecordInternalServerError with default headers values
func NewGetRecordInternalServerError() *GetRecordInternalServerError {

	return &GetRecordInternalServerError{}
}

// WithPayload adds the payload to the get record internal server error response
func (o *GetRecordInternalServerError) WithPayload(payload *models.InternalServerError) *GetRecordInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get record internal server error response
func (o *GetRecordInternalServerError) SetPayload(payload *models.InternalServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
