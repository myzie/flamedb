// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "FlameDB HTTP API",
    "title": "FlameDB HTTP API",
    "version": "1.0.0"
  },
  "host": "127.0.0.1",
  "basePath": "/api",
  "paths": {
    "/find": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Find a record by path",
        "operationId": "findRecord",
        "parameters": [
          {
            "type": "string",
            "description": "Path of record to find",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved record",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/records": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "List records",
        "operationId": "listRecords",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "offset",
            "in": "query"
          },
          {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "string",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "orderByDesc",
            "in": "query"
          },
          {
            "type": "string",
            "name": "orderByProperty",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "orderByPropertyDesc",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Create a new record",
        "operationId": "createRecord",
        "parameters": [
          {
            "description": "Record to be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/records/{recordId}": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Find record by ID",
        "operationId": "getRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to return",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved record",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Update an existing record",
        "operationId": "updateRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to be updated",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "description": "Record to be updated",
            "name": "record",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Deletes a record",
        "operationId": "deleteRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to be updated",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BadRequest": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "is_service": {
          "type": "boolean"
        },
        "permissions": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "QueryResult": {
      "type": "object",
      "required": [
        "records"
      ],
      "properties": {
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecordOutput"
          }
        }
      }
    },
    "RecordInput": {
      "type": "object",
      "required": [
        "path",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RecordOutput": {
      "type": "object",
      "required": [
        "id",
        "path",
        "parent",
        "created_at",
        "created_by",
        "updated_at",
        "updated_by",
        "properties"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "updated_by": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "HTTP basic authentication",
      "type": "basic"
    },
    "flamedb_auth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "FlameDB HTTP API",
    "title": "FlameDB HTTP API",
    "version": "1.0.0"
  },
  "host": "127.0.0.1",
  "basePath": "/api",
  "paths": {
    "/find": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Find a record by path",
        "operationId": "findRecord",
        "parameters": [
          {
            "type": "string",
            "description": "Path of record to find",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved record",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/records": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "List records",
        "operationId": "listRecords",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "offset",
            "in": "query"
          },
          {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "string",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "orderByDesc",
            "in": "query"
          },
          {
            "type": "string",
            "name": "orderByProperty",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "orderByPropertyDesc",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Create a new record",
        "operationId": "createRecord",
        "parameters": [
          {
            "description": "Record to be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/records/{recordId}": {
      "get": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Find record by ID",
        "operationId": "getRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to return",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved record",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Update an existing record",
        "operationId": "updateRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to be updated",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "description": "Record to be updated",
            "name": "record",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/RecordOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "flamedb_auth": []
          },
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "records"
        ],
        "summary": "Deletes a record",
        "operationId": "deleteRecord",
        "parameters": [
          {
            "type": "string",
            "description": "ID of record to be updated",
            "name": "recordId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Override user ID",
            "name": "X-User-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BadRequest": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "is_service": {
          "type": "boolean"
        },
        "permissions": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "QueryResult": {
      "type": "object",
      "required": [
        "records"
      ],
      "properties": {
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecordOutput"
          }
        }
      }
    },
    "RecordInput": {
      "type": "object",
      "required": [
        "path",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RecordOutput": {
      "type": "object",
      "required": [
        "id",
        "path",
        "parent",
        "created_at",
        "created_by",
        "updated_at",
        "updated_by",
        "properties"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "updated_by": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "HTTP basic authentication",
      "type": "basic"
    },
    "flamedb_auth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
